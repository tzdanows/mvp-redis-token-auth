{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5003/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = token;\n  }\n  return config;\n});\nexport const login = async credentials => {\n  try {\n    const response = await api.post('/login', credentials);\n    const token = response.data.token;\n    localStorage.setItem('token', token);\n    return token;\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error;\n  }\n};\nexport const logout = async () => {\n  await api.post('/logout');\n};\nexport const getBooks = async () => {\n  const response = await api.get('/books');\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","login","credentials","response","post","data","setItem","error","console","logout","getBooks","get"],"sources":["/Users/tzdanows/dev/backend-projs/auth-implementation/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { LoginCredentials, Book } from '../types';\n\nconst API_URL = 'http://localhost:5003/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = token;\n  }\n  return config;\n});\n\nexport const login = async (credentials: LoginCredentials): Promise<string> => {\n  try {\n    const response = await api.post('/login', credentials);\n    const token = response.data.token;\n    localStorage.setItem('token', token);\n    return token;\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error;\n  }\n};\n\nexport const logout = async (): Promise<void> => {\n  await api.post('/logout');\n};\n\nexport const getBooks = async (): Promise<Book[]> => {\n  const response = await api.get('/books');\n  return response.data;\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAGH,KAAK;EACtC;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,KAAK,GAAG,MAAOC,WAA6B,IAAsB;EAC7E,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMd,GAAG,CAACe,IAAI,CAAC,QAAQ,EAAEF,WAAW,CAAC;IACtD,MAAML,KAAK,GAAGM,QAAQ,CAACE,IAAI,CAACR,KAAK;IACjCC,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAET,KAAK,CAAC;IACpC,OAAOA,KAAK;EACd,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,MAAM,GAAG,MAAAA,CAAA,KAA2B;EAC/C,MAAMpB,GAAG,CAACe,IAAI,CAAC,SAAS,CAAC;AAC3B,CAAC;AAED,OAAO,MAAMM,QAAQ,GAAG,MAAAA,CAAA,KAA6B;EACnD,MAAMP,QAAQ,GAAG,MAAMd,GAAG,CAACsB,GAAG,CAAC,QAAQ,CAAC;EACxC,OAAOR,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}