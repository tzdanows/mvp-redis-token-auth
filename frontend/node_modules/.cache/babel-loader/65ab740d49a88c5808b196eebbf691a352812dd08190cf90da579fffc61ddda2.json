{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { login as apiLogin, logout as apiLogout, register as apiRegister } from '../services/api';\nexport const useAuth = () => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const login = useCallback(async credentials => {\n    try {\n      const newToken = await apiLogin(credentials);\n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  }, []);\n  const logout = useCallback(async () => {\n    try {\n      await apiLogout();\n      localStorage.removeItem('token');\n      setToken(null);\n    } catch (error) {\n      console.error('Logout failed:', error);\n      throw error;\n    }\n  }, []);\n  const register = useCallback(async credentials => {\n    try {\n      await apiRegister(credentials);\n    } catch (error) {\n      console.error('Registration failed:', error);\n      throw error;\n    }\n  }, []);\n  return {\n    token,\n    login,\n    logout,\n    register\n  };\n};\n_s(useAuth, \"JVBwNtFVN1wtZ0gX0SWgXQ1AqqA=\");","map":{"version":3,"names":["useState","useCallback","login","apiLogin","logout","apiLogout","register","apiRegister","useAuth","_s","token","setToken","localStorage","getItem","credentials","newToken","setItem","error","console","removeItem"],"sources":["/Users/tzdanows/dev/backend-projs/auth-implementation/frontend/src/hooks/useAuth.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { login as apiLogin, logout as apiLogout, register as apiRegister } from '../services/api';\nimport { LoginCredentials } from '../types';\n\nexport const useAuth = () => {\n  const [token, setToken] = useState<string | null>(localStorage.getItem('token'));\n\n  const login = useCallback(async (credentials: LoginCredentials) => {\n    try {\n      const newToken = await apiLogin(credentials);\n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  }, []);\n\n  const logout = useCallback(async () => {\n    try {\n      await apiLogout();\n      localStorage.removeItem('token');\n      setToken(null);\n    } catch (error) {\n      console.error('Logout failed:', error);\n      throw error;\n    }\n  }, []);\n\n  const register = useCallback(async (credentials: LoginCredentials & { email: string }) => {\n    try {\n      await apiRegister(credentials);\n    } catch (error) {\n      console.error('Registration failed:', error);\n      throw error;\n    }\n  }, []);\n\n  return { token, login, logout, register };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,KAAK,IAAIC,QAAQ,EAAEC,MAAM,IAAIC,SAAS,EAAEC,QAAQ,IAAIC,WAAW,QAAQ,iBAAiB;AAGjG,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAgBY,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAEhF,MAAMX,KAAK,GAAGD,WAAW,CAAC,MAAOa,WAA6B,IAAK;IACjE,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,QAAQ,CAACW,WAAW,CAAC;MAC5CF,YAAY,CAACI,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC;MACvCJ,QAAQ,CAACI,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,MAAMA,KAAK;IACb;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMb,MAAM,GAAGH,WAAW,CAAC,YAAY;IACrC,IAAI;MACF,MAAMI,SAAS,CAAC,CAAC;MACjBO,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;MAChCR,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,MAAMA,KAAK;IACb;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMX,QAAQ,GAAGL,WAAW,CAAC,MAAOa,WAAiD,IAAK;IACxF,IAAI;MACF,MAAMP,WAAW,CAACO,WAAW,CAAC;IAChC,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEP,KAAK;IAAER,KAAK;IAAEE,MAAM;IAAEE;EAAS,CAAC;AAC3C,CAAC;AAACG,EAAA,CAnCWD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}